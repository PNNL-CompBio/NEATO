knitr::opts_chunk$set(echo = TRUE)
library("PCSF")
library("igraph")
knitr::opts_chunk$set(echo = TRUE)
library("PCSF")
data("STRING")
data("Tgfb_phospho")
terminals <- Tgfb_phospho
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
plot(subnet)
library("PCSF")
data("STRING")
data("Tgfb_phospho")
terminals <- Tgfb_phospho
ppi <- construct_interactome(STRING)
subnet <- PCSF_rand(ppi, terminals, n = 10, r = 0.1, w = 2, b = 1, mu = 0.0005)
res <- enrichment_analysis(subnet)
plot(res$subnet)
View(STRING)
View(STRING)
head(Tgfb_phospho)
readRDS(proStat2.rds)
readRDS(proStat2.RDS)
readRDS(/Users/lewi052/MAP/STRINGdb_exploration/proStat2.RDS)
readRDS("/Users/lewi052/MAP/STRINGdb_exploration/proStat2.RDS")
geneList_HvS <- proStat_HvS[,10]
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
proStat <- readRDS("/Users/lewi052/MAP/STRINGdb_exploration/proStat2.RDS")
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
library("PCSF")
library(tidyverse)
data("STRING")
data("Tgfb_phospho")
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
names(geneList_HvS) = as.character(proStat_HvS[,17])
geneList_HvS = sort(geneList_HvS, decreasing = TRUE)
terminals <- geneList_HvS
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
head(Tgfb_phospho)
head(terminals)
View(proStat_HvS)
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
names(geneList_HvS) = as.character(proStat_HvS[,18])
geneList_HvS = sort(geneList_HvS, decreasing = TRUE)
terminals <- geneList_HvS
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
names(geneList_HvS) = as.character(proStat_HvS[,18])
terminals <- geneList_HvS
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
terminals <- geneList_HvS
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.005)
?write.graph
?wirte_graph
?write_graph
shiny::runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
?png
?write.graph
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
?downloadHandler
runApp('MAP/Prototype_app')
?png
?write.csv
?png
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
?write.graph
runApp('MAP/Prototype_app')
actoinButton
?actionButton
?observeEvent
runApp('MAP/Prototype_app')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# The following initializes usage of Bioc devel
BiocManager::install(version='devel')
BiocManager::install("UniProt.ws")
library("PCSF")
library("UniProt.ws")
data("STRING")
data("Tgfb_phospho")
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
names(geneList_HvS) = as.character(select(org.Hs.eg.db, proStat_HvS[,10], "SYMBOL","UNIPROT"))
?`select,UniProt.ws-method`
browseVignettes("UniProt.ws")
library("PCSF")
library("UniProt.ws")
library(org.Hs.eg.db)
data("STRING")
data("Tgfb_phospho")
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
names(geneList_HvS) = as.character(select(org.Hs.eg.db, proStat_HvS[,10], "SYMBOL","UNIPROT"))
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
names(geneList_HvS) = as.character(UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,10], "SYMBOL","UNIPROT"))
?select
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
names(geneList_HvS) = as.character(UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT"))
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_syms <- c()
for (i in 1:length(proStat_HvS)){
gene_syms<- c(gene_syms, UniProt.ws::select(org.Hs.eg.db, proStat_HvS[i,17], "SYMBOL","UNIPROT"))
}
View(gene_syms)
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_syms <- c()
for (i in 1:length(proStat_HvS)){
gene_syms<- c(gene_syms, UniProt.ws::select(org.Hs.eg.db, proStat_HvS[i,17], "SYMBOL","UNIPROTKB"))
}
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_syms <- c()
for (i in 1:length(proStat_HvS)){
gene_syms<- c(gene_syms, UniProt.ws::select(org.Hs.eg.db, proStat_HvS[i,17], "SYMBOL","UNIPROT"))
}
knitr::opts_chunk$set(echo = TRUE)
proStat <- readRDS("/Users/lewi052/MAP/STRINGdb_exploration/proStat2.RDS")
colnames(proStat)
library(pmartR)
library(tidyverse)
library(STRINGdb)
library(stringr)
colnames(proStat)[which(names(proStat) == "P_value_A_Healthy Control_vs_Severe")] <- "P_value"
colnames(proStat)[which(names(proStat) == "Fold_change_Healthy Control_vs_Severe")] <- "Fold_change"
colnames(proStat)[which(names(proStat) == "Flag_A_Healthy Control_vs_Severe")] <- "Flag"
filtered_stat <- filter(proStat, Flag != 0)
mapped_stat <- string_db$map(filtered_stat, "Protein_Identifier", removeUnmappedRows = TRUE )
string_db <- STRINGdb$new(version="11", species=9606, score_threshold=400, input_directory="/Users/lewi052/MAP/STRINGdb_exploration/STRINGdb_cache")
colnames(proStat)[which(names(proStat) == "P_value_A_Healthy Control_vs_Severe")] <- "P_value"
colnames(proStat)[which(names(proStat) == "Fold_change_Healthy Control_vs_Severe")] <- "Fold_change"
colnames(proStat)[which(names(proStat) == "Flag_A_Healthy Control_vs_Severe")] <- "Flag"
filtered_stat <- filter(proStat, Flag != 0)
mapped_stat <- string_db$map(filtered_stat, "Protein_Identifier", removeUnmappedRows = TRUE )
mapped_stat_pval05 <- string_db$add_diff_exp_color( subset(mapped_stat, P_value<0.05), logFcColStr="Fold_change" )
mapped_stat_pval05 <- mutate(mapped_stat_pval05, Fold_change_abs = abs(mapped_stat_pval05$Fold_change))
mapped_stat_pval05 <- mapped_stat_pval05[order(mapped_stat_pval05$`Fold_change_abs`, decreasing = T), ]
payload_id <- string_db$post_payload( mapped_stat_pval05$STRING_id, colors=mapped_stat_pval05$color )
hits <- mapped_stat_pval05[1:150, ]
string_db$plot_network(hits$STRING_id, payload_id = payload_id)
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
gene_syms <- c()
for (i in 1:length(mapped_stat_pval05)){
gene_syms<- c(gene_syms, UniProt.ws::select(org.Hs.eg.db, mapped_stat_pval05[i,17], "SYMBOL","UNIPROT"))
}
View(mapped_stat_pval05)
# proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_syms <- c()
for (i in 1:length(mapped_stat_pval05)){
gene_syms<- c(gene_syms, UniProt.ws::select(org.Hs.eg.db, mapped_stat_pval05[i,1], "SYMBOL","UNIPROT"))
}
# names(geneList_HvS) = as.character(gene_syms)
View(gene_syms)
head(gene_syms)
# proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_syms <- c()
for (i in 1:length(mapped_stat_pval05[,1])){
gene_syms<- c(gene_syms, UniProt.ws::select(org.Hs.eg.db, mapped_stat_pval05[i,1], "SYMBOL","UNIPROT"))
}
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
names(geneList_HvS) = as.character(UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT"))
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
View(gene_sym)
knitr::opts_chunk$set(echo = TRUE)
library("PCSF")
library("UniProt.ws")
library(org.Hs.eg.db)
data("STRING")
data("Tgfb_phospho")
proStat <- readRDS("/Users/lewi052/MAP/STRINGdb_exploration/proStat2.RDS")
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
library("PCSF")
library("tidyverse")
library("UniProt.ws")
library(org.Hs.eg.db)
data("STRING")
data("Tgfb_phospho")
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
names(geneList_HvS) = as.character(gene_sym[,2])
View(gene_sym)
length(unique(gene_sym[,1]))
?distinct
duplicated(gene_sym[,1])
which(duplicated(gene_sym[,1]))
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
gene_sym[!duplicated(gene_sym)]
View(gene_sym)
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
gene_sym <- gene_sym %>% dplyr::distinct(UNIPROT)
names(geneList_HvS) = as.character(gene_sym[,2])
View(gene_sym)
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
gene_sym <- gene_sym %>% dplyr::distinct(UNIPROT)
names(geneList_HvS) = as.character(gene_sym[,2])
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
gene_sym <- gene_sym[unique(gene_sym[,1])]
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
gene_sym <- gene_sym[unique(gene_sym[,1]), ]
names(geneList_HvS) = as.character(gene_sym[,2])
terminals <- geneList_HvS
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
terminals <- geneList_HvS
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
View(STRING)
browseVignettes("PCSF")
View(STRING)
View(gene_sym)
View(gene_sym)
library("PCSF")
library("tidyverse")
library("UniProt.ws")
library(org.Hs.eg.db)
data("STRING")
data("Tgfb_phospho")
proStat <- readRDS("/Users/lewi052/MAP/STRINGdb_exploration/proStat2.RDS")
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
View(gene_sym)
gene_sym[unique(gene_sym[,1]), ]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
gene_sym[unique(gene_sym[,1])]
unique(gene_sym[,1])
gene_sym[!duplicated(gene_sym[,1]),]
knitr::opts_chunk$set(echo = TRUE)
library("PCSF")
library("tidyverse")
library("UniProt.ws")
library(org.Hs.eg.db)
data("STRING")
data("Tgfb_phospho")
proStat <- readRDS("/Users/lewi052/MAP/STRINGdb_exploration/proStat2.RDS")
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
gene_sym[!duplicated(gene_sym[,1]),]
names(geneList_HvS) = as.character(gene_sym[,2])
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- proStat_HvS[,10]
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
gene_sym <- gene_sym[!duplicated(gene_sym[,1]),]
names(geneList_HvS) = as.character(gene_sym[,2])
terminals <- geneList_HvS
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
data("Tgfb_phospho")
terminals <- Tgfb_phospho
terminals
proStat_HvS <- proStat %>% filter(`P_value_A_Healthy Control_vs_Severe`<0.05) %>% filter(`Flag_A_Healthy Control_vs_Severe` != 0)
geneList_HvS <- abs(proStat_HvS[,10])
gene_sym <- UniProt.ws::select(org.Hs.eg.db, proStat_HvS[,17], "SYMBOL","UNIPROT")
gene_sym <- gene_sym[!duplicated(gene_sym[,1]),]
names(geneList_HvS) = as.character(gene_sym[,2])
terminals <- geneList_HvS
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
plot(subnet)
res <- enrichment_analysis(subnet)
plot(res$subnet)
terminals <- geneList_HvS[100]
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
geneList_HvS <- sort(geneList_HvS)
terminals <- geneList_HvS
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
plot(subnet)
geneList_HvS <- sort(geneList_HvS)
terminals <- geneList_HvS[100]
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
geneList_HvS <- sort(geneList_HvS, decreasing = T)
terminals <- geneList_HvS[100]
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
geneList_HvS <- sort(geneList_HvS, decreasing = T)
terminals <- geneList_HvS[1:100]
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
plot(subnet)
res <- enrichment_analysis(subnet)
plot(res$subnet)
?plot
geneList_HvS <- sort(geneList_HvS, decreasing = T)
terminals <- geneList_HvS[1:100]
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
plot(subnet, node_size = 15, node_label_cex = 0.5)
geneList_HvS <- sort(geneList_HvS, decreasing = T)
terminals <- geneList_HvS[1:100]
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
plot(subnet, node_size = 10, node_label_cex = 0.5)
library("PCSF")
data("STRING")
data("Tgfb_phospho")
terminals <- Tgfb_phospho
ppi <- construct_interactome(STRING)
subnet <- PCSF_rand(ppi, terminals, n = 10, r = 0.1, w = 2, b = 1, mu = 0.0005)
res <- enrichment_analysis(subnet)
plot(res$subnet)
geneList_HvS <- sort(geneList_HvS, decreasing = T)
terminals <- geneList_HvS[1:50]
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
plot(subnet, node_size = 10, node_label_cex = 0.5)
res <- enrichment_analysis(subnet)
plot(res$subnet)
?PCSF::plot.PCSF
geneList_HvS <- sort(geneList_HvS, decreasing = T)
terminals <- geneList_HvS[1:50]
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
plot(subnet, style = 1, node_size = 20, node_label_cex = 10)
plot(subnet, style = 0, node_size = 20, node_label_cex = 10)
plot(subnet, style = 0, node_size = 20, node_label_cex = 10)
plot(subnet, style = 0, node_size = 20, node_label_cex = 10)
geneList_HvS <- sort(geneList_HvS, decreasing = T)
terminals <- geneList_HvS[1:50]
ppi <- construct_interactome(STRING)
subnet <- PCSF(ppi, terminals, w = 2, b = 1, mu = 0.0005)
plot(subnet, style = 1, node_size = 20, node_label_cex = 10)
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
plot(subnet, style = 1, node_size = 20, node_label_cex = 10, Terminal_node_color = "red")
res <- enrichment_analysis(subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
plot(res$subnet)
library(shiny)
library(tidyverse)
library(STRINGdb)
library(shinycssloaders)
library(shiny)
library(tidyverse)
library(STRINGdb)
library(shinycssloaders)
?STRINGdb::plot_network
knitr::opts_chunk$set(echo = TRUE)
colnames(proStat)[which(names(proStat) == "P_value_A_Healthy Control_vs_Severe")] <- "P_value"
colnames(proStat)[which(names(proStat) == "Fold_change_Healthy Control_vs_Severe")] <- "Fold_change"
colnames(proStat)[which(names(proStat) == "Flag_A_Healthy Control_vs_Severe")] <- "Flag"
string_db <- STRINGdb$new(version="11", species=9606, score_threshold=400, input_directory="/Users/lewi052/MAP/STRINGdb_exploration/STRINGdb_cache")
filtered_stat <- filter(proStat, Flag != 0)
mapped_stat <- string_db$map(filtered_stat, "Protein_Identifier", removeUnmappedRows = TRUE )
mapped_stat_pval05 <- string_db$add_diff_exp_color( subset(mapped_stat, P_value<0.05), logFcColStr="Fold_change" )
mapped_stat_pval05 <- mutate(mapped_stat_pval05, Fold_change_abs = abs(mapped_stat_pval05$Fold_change))
mapped_stat_pval05 <- mapped_stat_pval05[order(mapped_stat_pval05$`Fold_change_abs`, decreasing = T), ]
payload_id <- string_db$post_payload( mapped_stat_pval05$STRING_id, colors=mapped_stat_pval05$color )
hits <- mapped_stat_pval05[1:150, ]
png("/Users/lewi052/MAP/network,png", width = 700, height = 550)
string_db$plot_network(hits$STRING_id, payload_id = payload_id)
dev.off
colnames(proStat)[which(names(proStat) == "P_value_A_Healthy Control_vs_Severe")] <- "P_value"
colnames(proStat)[which(names(proStat) == "Fold_change_Healthy Control_vs_Severe")] <- "Fold_change"
colnames(proStat)[which(names(proStat) == "Flag_A_Healthy Control_vs_Severe")] <- "Flag"
string_db <- STRINGdb$new(version="11", species=9606, score_threshold=400, input_directory="/Users/lewi052/MAP/STRINGdb_exploration/STRINGdb_cache")
filtered_stat <- filter(proStat, Flag != 0)
mapped_stat <- string_db$map(filtered_stat, "Protein_Identifier", removeUnmappedRows = TRUE )
mapped_stat_pval05 <- string_db$add_diff_exp_color( subset(mapped_stat, P_value<0.05), logFcColStr="Fold_change" )
mapped_stat_pval05 <- mutate(mapped_stat_pval05, Fold_change_abs = abs(mapped_stat_pval05$Fold_change))
mapped_stat_pval05 <- mapped_stat_pval05[order(mapped_stat_pval05$`Fold_change_abs`, decreasing = T), ]
payload_id <- string_db$post_payload( mapped_stat_pval05$STRING_id, colors=mapped_stat_pval05$color )
hits <- mapped_stat_pval05[1:150, ]
png("/Users/lewi052/MAP/network.png", width = 700, height = 550)
string_db$plot_network(hits$STRING_id, payload_id = payload_id)
dev.off
png("/Users/lewi052/MAP/network.png", width = 1400, height = 1100)
string_db$plot_network(hits$STRING_id, payload_id = payload_id)
dev.off
png("/Users/lewi052/MAP/network.png", width = 1400, height = 1100)
string_db$plot_network(hits$STRING_id, payload_id = payload_id)
dev.off()
png("/Users/lewi052/MAP/network.png", width = 1400, height = 1100)
string_db$plot_network(hits$STRING_id, payload_id = payload_id)
dev.off()
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
vari <- string_db$plot_network(hits$STRING_id, payload_id = payload_id)
class(vari)
vari
vari
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
?write.graph
runApp('MAP/Prototype_app')
hist(rnorm(100)
)
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
?par
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
runApp('MAP/Prototype_app')
